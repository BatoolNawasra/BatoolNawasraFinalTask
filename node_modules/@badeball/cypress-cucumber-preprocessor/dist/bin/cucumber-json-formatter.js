#!/usr/bin/env node
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const promises_1 = require("stream/promises");
const stream_1 = require("stream");
const message_streams_1 = require("@cucumber/message-streams");
const formatters_1 = require("../helpers/formatters");
const assertions_1 = require("../helpers/assertions");
const envelopes = [];
(0, promises_1.pipeline)(process.stdin, new message_streams_1.NdjsonToMessageStream(), new stream_1.Writable({
    objectMode: true,
    write(envelope, _, callback) {
        envelopes.push(envelope);
        callback();
    },
}))
    .then(() => {
    let jsonOutput;
    const eventBroadcaster = (0, formatters_1.createJsonFormatter)(envelopes, (chunk) => {
        jsonOutput = chunk;
    });
    for (const message of envelopes) {
        eventBroadcaster.emit("envelope", message);
    }
    (0, assertions_1.assertIsString)(jsonOutput, "Expected JSON formatter to have finished, but it never returned");
    console.log(jsonOutput);
})
    .catch((err) => {
    console.error(err.stack);
    process.exitCode = 1;
});
