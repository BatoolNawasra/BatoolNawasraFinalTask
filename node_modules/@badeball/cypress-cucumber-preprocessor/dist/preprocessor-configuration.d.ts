import { ICypressConfiguration } from "@badeball/cypress-configuration";
interface IEnvironmentOverrides {
    stepDefinitions?: string | string[];
    messagesEnabled?: boolean;
    messagesOutput?: string;
    jsonEnabled?: boolean;
    jsonOutput?: string;
    htmlEnabled?: boolean;
    htmlOutput?: string;
    prettyEnabled?: boolean;
    filterSpecs?: boolean;
    omitFiltered?: boolean;
}
export interface IBaseUserConfiguration {
    stepDefinitions?: string | string[];
    messages?: {
        enabled: boolean;
        output?: string;
    };
    json?: {
        enabled: boolean;
        output?: string;
    };
    html?: {
        enabled: boolean;
        output?: string;
    };
    pretty?: {
        enabled: boolean;
    };
    filterSpecs?: boolean;
    omitFiltered?: boolean;
}
export interface IUserConfiguration extends IBaseUserConfiguration {
    e2e?: IBaseUserConfiguration;
    component?: IBaseUserConfiguration;
}
export interface IPreprocessorConfiguration {
    readonly stepDefinitions: string | string[];
    readonly messages: {
        enabled: boolean;
        output: string;
    };
    readonly json: {
        enabled: boolean;
        output: string;
    };
    readonly html: {
        enabled: boolean;
        output: string;
    };
    readonly pretty: {
        enabled: boolean;
    };
    readonly filterSpecs: boolean;
    readonly omitFiltered: boolean;
    readonly implicitIntegrationFolder: string;
}
export declare const COMPILED_REPORTER_ENTRYPOINT = "dist/subpath-entrypoints/pretty-reporter.js";
export declare function combineIntoConfiguration(configuration: IUserConfiguration, overrides: IEnvironmentOverrides, cypress: ICypressConfiguration, implicitIntegrationFolder: string): IPreprocessorConfiguration;
export type ConfigurationFileResolver = (projectRoot: string) => unknown | Promise<unknown>;
export declare function resolve(cypressConfig: ICypressConfiguration, environment: Record<string, unknown>, implicitIntegrationFolder: string, configurationFileResolver?: ConfigurationFileResolver): Promise<IPreprocessorConfiguration>;
export {};
